"use client"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Switch } from "@/components/ui/switch"
import { Checkbox } from "@/components/ui/checkbox"
import { RadioGroup, RadioGroupItem } from "@/components/ui/radio-group"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { Slider } from "@/components/ui/slider"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Alert, AlertDescription } from "@/components/ui/alert"
import { Separator } from "@/components/ui/separator"
import { 
  Plus, 
  Minus,
  Settings, 
  BarChart3, 
  Users, 
  Package, 
  Clock, 
  CheckCircle, 
  AlertCircle,
  Play,
  Pause,
  Stop,
  RefreshCw,
  Download,
  Upload,
  Edit,
  Trash2,
  Eye,
  Search,
  Filter,
  SortAsc,
  SortDesc,
  Star,
  Heart,
  Share,
  Copy,
  Save,
  Cancel,
  Confirm,
  Warning,
  Info,
  Success,
  Error
} from "lucide-react"

export default function ButtonsDemoPage() {
  const [isActive, setIsActive] = useState(false)
  const [sliderValue, setSliderValue] = useState([50])
  const [selectedOption, setSelectedOption] = useState("")
  const [checkboxValue, setCheckboxValue] = useState(false)

  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-50 to-pink-100 p-6">
      <div className="max-w-7xl mx-auto">
        {/* Header */}
        <div className="mb-8 text-center">
          <h1 className="text-4xl font-bold text-gray-900 mb-2">
            üéõÔ∏è UI Components Demo
          </h1>
          <p className="text-gray-600 text-lg">
            ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏î‡πÅ‡∏•‡∏∞ UI Components ‡∏ï‡πà‡∏≤‡∏á‡πÜ
          </p>
        </div>

        {/* Basic Buttons */}
        <Card className="mb-8">
          <CardHeader>
            <CardTitle>‡∏õ‡∏∏‡πà‡∏°‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô (Basic Buttons)</CardTitle>
            <CardDescription>
              ‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏î‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ï‡πà‡∏≤‡∏á‡πÜ
            </CardDescription>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="flex flex-wrap gap-2">
              <Button>‡∏õ‡∏∏‡πà‡∏°‡∏õ‡∏Å‡∏ï‡∏¥</Button>
              <Button variant="secondary">‡∏õ‡∏∏‡πà‡∏°‡∏£‡∏≠‡∏á</Button>
              <Button variant="outline">‡∏õ‡∏∏‡πà‡∏°‡∏Ç‡∏≠‡∏ö</Button>
              <Button variant="ghost">‡∏õ‡∏∏‡πà‡∏°‡πÇ‡∏õ‡∏£‡πà‡∏á</Button>
              <Button variant="destructive">‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö</Button>
              <Button variant="link">‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏¥‡∏á‡∏Å‡πå</Button>
            </div>
            
            <Separator />
            
            <div className="flex flex-wrap gap-2">
              <Button size="sm">‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏•‡πá‡∏Å</Button>
              <Button size="default">‡∏Ç‡∏ô‡∏≤‡∏î‡∏õ‡∏Å‡∏ï‡∏¥</Button>
              <Button size="lg">‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà</Button>
            </div>
          </CardContent>
        </Card>

        {/* Action Buttons */}
        <Card className="mb-8">
          <CardHeader>
            <CardTitle>‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô (Action Buttons)</CardTitle>
            <CardDescription>
              ‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏î‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô
            </CardDescription>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
              <Button 
                className="bg-green-600 hover:bg-green-700 text-white"
                onClick={() => alert("‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô!")}
              >
                <Play className="mr-2 h-4 w-4" />
                ‡πÄ‡∏£‡∏¥‡πà‡∏°
              </Button>
              
              <Button 
                variant="outline" 
                className="border-orange-300 text-orange-600 hover:bg-orange-50"
                onClick={() => alert("‡∏´‡∏¢‡∏∏‡∏î‡∏ä‡∏±‡πà‡∏ß‡∏Ñ‡∏£‡∏≤‡∏ß!")}
              >
                <Pause className="mr-2 h-4 w-4" />
                ‡∏´‡∏¢‡∏∏‡∏î
              </Button>
              
              <Button 
                variant="destructive"
                onClick={() => alert("‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô!")}
              >
                <Stop className="mr-2 h-4 w-4" />
                ‡∏´‡∏¢‡∏∏‡∏î
              </Button>
              
              <Button 
                variant="secondary"
                onClick={() => alert("‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•!")}
              >
                <RefreshCw className="mr-2 h-4 w-4" />
                ‡∏£‡∏µ‡πÄ‡∏ü‡∏£‡∏ä
              </Button>
            </div>
            
            <Separator />
            
            <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
              <Button variant="outline">
                <Download className="mr-2 h-4 w-4" />
                ‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î
              </Button>
              
              <Button variant="outline">
                <Upload className="mr-2 h-4 w-4" />
                ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î
              </Button>
              
              <Button variant="outline">
                <Edit className="mr-2 h-4 w-4" />
                ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
              </Button>
              
              <Button variant="outline">
                <Trash2 className="mr-2 h-4 w-4" />
                ‡∏•‡∏ö
              </Button>
            </div>
          </CardContent>
        </Card>

        {/* Interactive Controls */}
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
          <Card>
            <CardHeader>
              <CardTitle>‡∏ï‡∏±‡∏ß‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° (Controls)</CardTitle>
              <CardDescription>
                ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Switch, Slider, ‡πÅ‡∏•‡∏∞ Checkbox
              </CardDescription>
            </CardHeader>
            <CardContent className="space-y-6">
              <div className="flex items-center space-x-2">
                <Switch 
                  id="demo-switch" 
                  checked={isActive}
                  onCheckedChange={setIsActive}
                />
                <Label htmlFor="demo-switch">
                  ‡πÇ‡∏´‡∏°‡∏î‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ {isActive ? "(‡πÄ‡∏õ‡∏¥‡∏î)" : "(‡∏õ‡∏¥‡∏î)"}
                </Label>
              </div>
              
              <div className="space-y-2">
                <Label>‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß: {sliderValue[0]}%</Label>
                <Slider
                  value={sliderValue}
                  onValueChange={setSliderValue}
                  max={100}
                  step={1}
                  className="w-full"
                />
              </div>
              
              <div className="flex items-center space-x-2">
                <Checkbox 
                  id="demo-checkbox"
                  checked={checkboxValue}
                  onCheckedChange={setCheckboxValue}
                />
                <Label htmlFor="demo-checkbox">
                  ‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç {checkboxValue ? "‚úì" : ""}
                </Label>
              </div>
            </CardContent>
          </Card>

          <Card>
            <CardHeader>
              <CardTitle>‡∏ü‡∏≠‡∏£‡πå‡∏° (Form Elements)</CardTitle>
              <CardDescription>
                ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á Input, Select, ‡πÅ‡∏•‡∏∞ Radio Group
              </CardDescription>
            </CardHeader>
            <CardContent className="space-y-4">
              <div className="space-y-2">
                <Label htmlFor="demo-input">‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå</Label>
                <Input 
                  id="demo-input" 
                  placeholder="‡πÉ‡∏™‡πà‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå..."
                />
              </div>
              
              <div className="space-y-2">
                <Label htmlFor="demo-select">‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå</Label>
                <Select value={selectedOption} onValueChange={setSelectedOption}>
                  <SelectTrigger>
                    <SelectValue placeholder="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="food">‡∏≠‡∏≤‡∏´‡∏≤‡∏£</SelectItem>
                    <SelectItem value="beverage">‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏î‡∏∑‡πà‡∏°</SelectItem>
                    <SelectItem value="snack">‡∏Ç‡∏ô‡∏°‡∏Ç‡∏ö‡πÄ‡∏Ñ‡∏µ‡πâ‡∏¢‡∏ß</SelectItem>
                    <SelectItem value="dessert">‡∏Ç‡∏≠‡∏á‡∏´‡∏ß‡∏≤‡∏ô</SelectItem>
                  </SelectContent>
                </Select>
              </div>
              
              <div className="space-y-2">
                <Label>‡∏Ñ‡∏∏‡∏ì‡∏†‡∏≤‡∏û‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå</Label>
                <RadioGroup defaultValue="high">
                  <div className="flex items-center space-x-2">
                    <RadioGroupItem value="low" id="low" />
                    <Label htmlFor="low">‡∏ï‡πà‡∏≥</Label>
                  </div>
                  <div className="flex items-center space-x-2">
                    <RadioGroupItem value="medium" id="medium" />
                    <Label htmlFor="medium">‡∏õ‡∏≤‡∏ô‡∏Å‡∏•‡∏≤‡∏á</Label>
                  </div>
                  <div className="flex items-center space-x-2">
                    <RadioGroupItem value="high" id="high" />
                    <Label htmlFor="high">‡∏™‡∏π‡∏á</Label>
                  </div>
                </RadioGroup>
              </div>
            </CardContent>
          </Card>
        </div>

        {/* Status Badges */}
        <Card className="mb-8">
          <CardHeader>
            <CardTitle>‡πÅ‡∏ö‡∏î‡∏à‡πå‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ (Status Badges)</CardTitle>
            <CardDescription>
              ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏î‡πâ‡∏ß‡∏¢ Badge
            </CardDescription>
          </CardHeader>
          <CardContent>
            <div className="flex flex-wrap gap-2">
              <Badge variant="default">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£</Badge>
              <Badge variant="secondary">‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö</Badge>
              <Badge variant="destructive">‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î</Badge>
              <Badge variant="outline">‡∏ö‡∏≥‡∏£‡∏∏‡∏á‡∏£‡∏±‡∏Å‡∏©‡∏≤</Badge>
              <Badge className="bg-green-100 text-green-800 hover:bg-green-200">
                ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
              </Badge>
              <Badge className="bg-yellow-100 text-yellow-800 hover:bg-yellow-200">
                ‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
              </Badge>
              <Badge className="bg-blue-100 text-blue-800 hover:bg-blue-200">
                ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
              </Badge>
            </div>
          </CardContent>
        </Card>

        {/* Alert Examples */}
        <Card className="mb-8">
          <CardHeader>
            <CardTitle>‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô (Alerts)</CardTitle>
            <CardDescription>
              ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
            </CardDescription>
          </CardHeader>
          <CardContent className="space-y-4">
            <Alert>
              <CheckCircle className="h-4 w-4" />
              <AlertDescription>
                ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß
              </AlertDescription>
            </Alert>
            
            <Alert className="border-yellow-200 bg-yellow-50">
              <AlertCircle className="h-4 w-4 text-yellow-600" />
              <AlertDescription className="text-yellow-800">
                ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô: ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏õ‡∏¥‡∏î‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÉ‡∏ô‡∏≠‡∏µ‡∏Å 30 ‡∏ô‡∏≤‡∏ó‡∏µ
              </AlertDescription>
            </Alert>
            
            <Alert className="border-red-200 bg-red-50">
              <AlertCircle className="h-4 w-4 text-red-600" />
              <AlertDescription className="text-red-800">
                ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Å‡∏±‡∏ö‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ
              </AlertDescription>
            </Alert>
          </CardContent>
        </Card>

        {/* Tabs Demo */}
        <Card>
          <CardHeader>
            <CardTitle>‡πÅ‡∏ó‡πá‡∏ö (Tabs)</CardTitle>
            <CardDescription>
              ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Tabs component
            </CardDescription>
          </CardHeader>
          <CardContent>
            <Tabs defaultValue="buttons" className="w-full">
              <TabsList className="grid w-full grid-cols-3">
                <TabsTrigger value="buttons">‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏î</TabsTrigger>
                <TabsTrigger value="forms">‡∏ü‡∏≠‡∏£‡πå‡∏°</TabsTrigger>
                <TabsTrigger value="status">‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞</TabsTrigger>
              </TabsList>
              
              <TabsContent value="buttons" className="space-y-4 mt-4">
                <div className="grid grid-cols-2 gap-2">
                  <Button size="sm" variant="outline">
                    <Plus className="mr-1 h-3 w-3" />
                    ‡πÄ‡∏û‡∏¥‡πà‡∏°
                  </Button>
                  <Button size="sm" variant="outline">
                    <Minus className="mr-1 h-3 w-3" />
                    ‡∏•‡∏ö
                  </Button>
                  <Button size="sm" variant="outline">
                    <Eye className="mr-1 h-3 w-3" />
                    ‡∏î‡∏π
                  </Button>
                  <Button size="sm" variant="outline">
                    <Copy className="mr-1 h-3 w-3" />
                    ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å
                  </Button>
                </div>
              </TabsContent>
              
              <TabsContent value="forms" className="space-y-4 mt-4">
                <div className="space-y-2">
                  <Label>‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤</Label>
                  <div className="flex gap-2">
                    <Input placeholder="‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤..." />
                    <Button size="sm">
                      <Search className="h-4 w-4" />
                    </Button>
                  </div>
                </div>
              </TabsContent>
              
              <TabsContent value="status" className="space-y-4 mt-4">
                <div className="flex flex-wrap gap-2">
                  <Badge variant="default">‡∏≠‡∏≠‡∏ô‡πÑ‡∏•‡∏ô‡πå</Badge>
                  <Badge variant="secondary">‡πÑ‡∏°‡πà‡∏ß‡πà‡∏≤‡∏á</Badge>
                  <Badge variant="destructive">‡∏≠‡∏≠‡∏ü‡πÑ‡∏•‡∏ô‡πå</Badge>
                </div>
              </TabsContent>
            </Tabs>
          </CardContent>
        </Card>

        {/* Navigation */}
        <div className="mt-8 text-center">
          <Button 
            variant="outline" 
            onClick={() => window.history.back()}
          >
            ‚Üê ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å
          </Button>
        </div>
      </div>
    </div>
  )
} 